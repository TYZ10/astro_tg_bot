from aiogram.utils.keyboard import (InlineKeyboardBuilder,
                                    InlineKeyboardButton,
                                    ReplyKeyboardBuilder,
                                    KeyboardButton)
from aiogram import types

from example_bot.Config_bot import ConfigBot


class KeyboardBot:
    def __init__(self, config: ConfigBot):
        self.config = config

        subscribe_ikb = InlineKeyboardBuilder()
        subscribe_ikb.button(
            text="–ö–∞–Ω–∞–ª",
            url=self.config.CHANEL_URL
        )
        self.subscribe_ikb = subscribe_ikb.as_markup()

        # self.main_menu_kb = self.__reply_kb(
        #     [
        #         "üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏",
        #         "ü™ê –ê–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã",
        #         "‚òÄÔ∏è –ü—Ä–æ–≥–Ω–æ–∑—ã",
        #         "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
        #         "‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
        #         "‚ùì –ü–æ–º–æ—â—å",
        #         "üíº –ë–∏–∑–Ω–µ—Å-–≥–æ—Ä–æ—Å–∫–æ–ø",
        #         "üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏",
        #         "üíû –ê–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö",
        #         "‚ù§Ô∏è‚Äçü©π –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è",
        #         "‚ú® –ê–Ω–∞–ª–∏–∑ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –ª–∏—á–Ω–æ—Å—Ç–∏",
        #     ],
        #     adjust_count=2
        # )

        self.main_menu_kb = self.__reply_kb(
            [
                "üîÆ –ê–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã",
                "üåü –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ –≥–æ—Ä–æ—Å–∫–æ–ø—ã",
                "üíû –ê–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö",
                "‚òÄÔ∏è –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã",
                "‚ùì –ü–æ–º–æ—â—å",
            ],
            adjust_count=2
        )

        self.natal_card_menu_ikb = self.__inline_kb(
            {
                "ü™ê –ê–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã": "ü™ê –ê–Ω–∞–ª–∏–∑ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã",
                "‚ú® –ê–Ω–∞–ª–∏–∑ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –ª–∏—á–Ω–æ—Å—Ç–∏":
                    "‚ú® –ê–Ω–∞–ª–∏–∑ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –ª–∏—á–Ω–æ—Å—Ç–∏",
                "üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏":
                    "üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏",
            }
        )

        self.predictions_and_horoscopes_ikb = self.__inline_kb(
            {
                "üóì –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥": "select prediction_year",
                "üóì –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥": "select prediction_year n",
                "üìÜ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü": "select prediction_month n",
                "üìÜ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü": "select prediction_month",
                "üíº –ë–∏–∑–Ω–µ—Å-–≥–æ—Ä–æ—Å–∫–æ–ø": "üíº –ë–∏–∑–Ω–µ—Å-–≥–æ—Ä–æ—Å–∫–æ–ø",
                "‚ù§Ô∏è‚Äçü©π –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è":
                    "–ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è",
                "‚òÄÔ∏è –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã": "select prediction_day",
            }
        )

        self.daily_forecasts_ikb = self.__inline_kb(
            {
                "üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏": "payments",
                "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞": "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                "‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ": "‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
            }
        )

        self.my_data_ikb = self.__inline_kb(
            {
                "–ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ": "modify my data",
                "–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –∞–≤—Ç–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è": "set time prediction",
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": "main menu"
            }
        )

        self.abolition_ikb = self.__inline_kb(
            {
                "–û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö": "main menu"
            }
        )

        self.start_generation_ikb = self.__inline_kb(
            {
                "üìÇ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ": "start generation",
                "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ": "modify my data",
                "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é": "main menu",
            }
        )

        self.selection_predictions_ikb = self.__inline_kb(
            {
                "–ù–∞ –≥–æ–¥": "select prediction_year",
                "–ù–∞ –º–µ—Å—è—Ü": "select prediction_month",
                "–ù–∞ –¥–µ–Ω—å (–¢—Ä–µ–±—É–µ—Ç –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏!)": "select prediction_day",
                "–û—Ç–º–µ–Ω–∞": "main menu",
            }
        )

        self.get_aspect_selection_ikb = self.__inline_kb(
            {
                "–§–∏–Ω–∞–Ω—Å—ã –∏ –∫–∞—Ä—å–µ—Ä–∞": "–§–∏–Ω–∞–Ω—Å—ã –∏ –∫–∞—Ä—å–µ—Ä–∞",
                "–°–µ–º—å—è –∏ –¥–µ—Ç–∏": "–°–µ–º—å—è –∏ –¥–µ—Ç–∏",
                "–õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è": "–õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
                "–î—É—Ö–æ–≤–Ω—ã–π —Ä–æ—Å—Ç –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ": "–î—É—Ö–æ–≤–Ω—ã–π —Ä–æ—Å—Ç –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ",
                "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —ç–Ω–µ—Ä–≥–∏—è": "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —ç–Ω–µ—Ä–≥–∏—è",
                "–û–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è": "–û–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
                "–î–µ—Ç–∏ –∏ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ": "–î–µ—Ç–∏ –∏ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ",
                "–ú–∏—Å—Å–∏—è –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ": "–ú–∏—Å—Å–∏—è –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ",
            },
            adjust_count=2
        )

        self.payments_ikb = self.__inline_kb(
            {
                "–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É": "payments",
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": "main menu",
            }
        )

        self.ref_payments_ikb = self.__inline_kb(
            {
                "–î–∞": "ref payments",
                "–ù–µ—Ç": "main menu",
            }
        )
        self.no_generation_data_ikb = self.__inline_kb(
            {
                "–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ.": "modify my data",
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.": "main menu",
            }
        )
        self.payments_choice_ikb = self.__inline_kb(
            {
                "–û–ø–ª–∞—Ç–∏—Ç—å —Ä—É–±–ª—è–º–∏": "choice payments_rub",
                "–û–ø–ª–∞—Ç–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º–∏ –±–∞–ª–ª–∞–º–∏": "choice payments_point",
                "–ù–∞–∑–∞–¥": "main menu",
            }
        )

    def create_payments_ikb(self, url, id):
        kb_payment = InlineKeyboardBuilder()
        kb_payment.button(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=url)
        kb_payment.button(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                          callback_data=f"check payment_{id}")
        kb_payment.button(text="–û—Ç–º–µ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                          callback_data="main menu")
        kb_payment.adjust(1)
        return kb_payment.as_markup()

    def __inline_kb(
            self,
            kb_data: dict,
            adjust_count: int = 1
    ) -> types.InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ—Å—Ç—É—é –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""

        keyboard = InlineKeyboardBuilder()
        for text, callback_data in kb_data.items():
            keyboard.button(
                text=text,
                callback_data=callback_data
            )
        keyboard.adjust(adjust_count)

        return keyboard.as_markup()

    def __reply_kb(
            self,
            kb_data: list,
            adjust_count: int = 1
    ) -> types.ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ—Å—Ç—É—é —Ä–µ–ø–ª–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""

        keyboard = ReplyKeyboardBuilder()
        for text in kb_data:
            keyboard.button(
                text=text
            )
        keyboard.adjust(adjust_count)

        return keyboard.as_markup(resize_keyboard=True)

